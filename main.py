import streamlit as st
from collections import Counter

st.title("–ö–∞–∫–æ–π —Ç—ã –º–∞—Å—Ç–µ—Ä?")

questions = [
    {
        "question": "–ö–∞–∫ —Ç—ã –Ω–∞—á–∏–Ω–∞–µ—à—å —Å–≤–æ–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å?",
        "options": [
            "–° —á–∞—à–∫–∏ –∫—Ä–µ–ø–∫–æ–≥–æ –∫–æ—Ñ–µ –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø–ª–∞–Ω–æ–≤ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏.",
            "–ü—Ä–æ–≤–æ–∂—É 10 –º–∏–Ω—É—Ç, –ø—ã—Ç–∞—è—Å—å –Ω–∞–π—Ç–∏ —Å–≤–æ—é –ª—é–±–∏–º—É—é –æ—Ç–≤–µ—Ä—Ç–∫—É.",
            "–ü—Ä–æ–∫–∞—á–∏–≤–∞—é –Ω–∞–≤—ã–∫–∏ –Ω–∞ YouTube, –∏–∑—É—á–∞—è –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –æ—Ç–¥–µ–ª–∫–∏.",
            "–ù–∞—Ö–æ–∂—É —É–¥–æ–±–Ω—ã–π —É–≥–æ–ª–æ–∫ –∏ –Ω–∞—á–∏–Ω–∞—é –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –¥–µ–Ω—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ—Ä–æ—Ç–∫–∏–º."
        ],
        "scores": [0, 1, 2, 3]
    },
    {
        "question": "–ö–∞–∫—É—é —Ñ—Ä–∞–∑—É —Ç—ã —á–∞—Å—Ç–æ –≥–æ–≤–æ—Ä–∏—à—å –Ω–∞ —Ä–∞–±–æ—Ç–µ?",
        "options": [
            "–°–¥–µ–ª–∞–µ–º –≤—Å—ë –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ!",
            "–ì–¥–µ –º–æ–π –º–æ–ª–æ—Ç–æ–∫? –û–Ω –∂–µ —Ç–æ–ª—å–∫–æ —á—Ç–æ –±—ã–ª —Ç—É—Ç!",
            "–Ø –≤–∞–º —Å–µ–π—á–∞—Å –ø–æ–∫–∞–∂—É, –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ!",
            "–†–µ–º–æ–Ω—Ç ‚Äì —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ. –Ø –ø—Ä–æ—Å—Ç–æ –Ω–∞—Å–ª–∞–∂–¥–∞—é—Å—å –ø—Ä–æ—Ü–µ—Å—Å–æ–º."
        ],
        "scores": [0, 1, 2, 3]
    },
    {
        "question": "–ß—Ç–æ —Ç—ã –æ–±—ã—á–Ω–æ –¥—É–º–∞–µ—à—å –æ –ø—Ä–æ–µ–∫—Ç–µ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ?",
        "options": [
            "–ó–∞–¥–∞—á–∞ —è—Å–Ω–∞, —Å–¥–µ–ª–∞–µ–º –±–µ–∑ –ø—Ä–æ–±–ª–µ–º!",
            "–ß—ë—Ä—Ç, –æ–ø—è—Ç—å —ç—Ç–∏ –Ω–µ—Ä–æ–≤–Ω—ã–µ —Å—Ç–µ–Ω—ã‚Ä¶",
            "–Ø –≤—Å—ë —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª, –∏ –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å, –∫–∞–∫ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä!",
            "–ù–∞–¥–µ—é—Å—å, —Å–¥–µ–ª–∞—é –≤—Å–µ –ø–æ –∫—Ä–∞—Å–æ—Ç–µ. –ù–µ –∏—Å–ø–æ—Ä—Ç–∏—Ç—å –±—ã‚Ä¶"
        ],
        "scores": [0, 1, 2, 3]
    },
    {
        "question": "–ö–∞–∫ —Ç—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ —Ä–∞–±–æ—á–∏–º –ø–µ—Ä–µ—Ä—ã–≤–∞–º?",
        "options": [
            "–û–Ω–∏ –º–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏.",
            "–Ø –Ω–∞ –ø–µ—Ä–µ—Ä—ã–≤–µ –∫–∞–∂–¥—ã–π —á–∞—Å, –Ω–æ –Ω–µ –∏–∑-–∑–∞ —É—Å—Ç–∞–ª–æ—Å—Ç–∏, –∞ –∏–∑-–∑–∞ –ø–æ–∏—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.",
            "–ü–µ—Ä–µ—Ä—ã–≤ ‚Äì —ç—Ç–æ –≤—Ä–µ–º—è –¥–ª—è –≤–¥—É–º—á–∏–≤—ã—Ö —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ä–∞–±–æ—Ç—É –∏–¥–µ–∞–ª—å–Ω–æ–π.",
            "–ü–µ—Ä–µ—Ä—ã–≤ ‚Äì –º–æ—ë –≤—Å—ë. –ö–∞–∫ –±—ã —Ä–∞—Å—Ç—è–Ω—É—Ç—å –µ–≥–æ –Ω–∞ –ø–æ–¥–æ–ª—å—à–µ."
        ],
        "scores": [0, 1, 2, 3]
    },
    {
        "question": "–ö–∞–∫ —Ç—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞?",
        "options": [
            "–≠–∫—Å–ø–µ—Ä—Ç, –∏ –≤—Å–µ –∑–Ω–∞—é—Ç, —á—Ç–æ —è –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–≤!",
            "–ù—É, —è –º–æ–≥—É –ø–æ—á–∏–Ω–∏—Ç—å –ø–æ—á—Ç–∏ –≤—Å—ë, –µ—Å–ª–∏ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∏ –ø–∞—Ä—É —Ä–æ–ª–∏–∫–æ–≤ –Ω–∞ YouTube.",
            "–Ø –º–∞—Å—Ç–µ—Ä —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞ ‚Äì –∫–∞–∂–¥—ã–π –º–æ–π —à—Ç—Ä–∏—Ö –ø—Ä–æ–¥—É–º–∞–Ω!",
            "–Ø –∫–∞–∫ —Ö—É–¥–æ–∂–Ω–∏–∫ ‚Äì –∏–Ω–æ–≥–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ—Å—Ç–æ –º–∞–≥–∏—á–µ—Å–∫–∏–π."
        ],
        "scores": [0, 1, 2, 3]
    },
    {
        "question": "–ö–∞–∫ —Ç—ã —Ä–µ—à–∞–µ—à—å –ø—Ä–æ–±–ª–µ–º—ã, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫?",
        "options": [
            "–°–ø–æ–∫–æ–π–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–∏—Ç—É–∞—Ü–∏—é –∏ –Ω–∞—Ö–æ–∂—É –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.",
            "–ü–∞–Ω–∏–∫—É—é, –Ω–æ –ø–æ—Ç–æ–º –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–∞—Ö–æ–∂—É –≤—ã—Ö–æ–¥.",
            "–ú–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ä–µ—à–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —è –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–¥—É–º—ã–≤–∞—é –≤—Å—ë –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã —Ç–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π –Ω–µ –±—ã–ª–æ.",
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–º–µ—Ç–∏—Ç."
        ],
        "scores": [0, 1, 2, 3]
    },
]

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if "current_question" not in st.session_state:
    st.session_state.current_question = 0
if "answers" not in st.session_state:
    st.session_state.answers = [None] * len(questions)

# –ï—Å–ª–∏ current_question –Ω–µ —á–∏—Å–ª–æ, —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω
if not isinstance(st.session_state.current_question, int):
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
    answer_counts = Counter(st.session_state.answers)
    max_count = max(answer_counts.values())
    # –ë–µ—Ä—ë–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    options_order = questions[0]["options"]
    for option in options_order:
        if answer_counts.get(option, 0) == max_count:
            most_common_answer = option
            break

    st.subheader("üîé –¢–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")

    if most_common_answer == options_order[0]:
        st.write("–¢—ã –º–∞—Å—Ç–µ—Ä-–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä! –£–≤–µ—Ä–µ–Ω–Ω–æ —É–ø—Ä–∞–≤–ª—è–µ—à—å –ø—Ä–æ—Ü–µ—Å—Å–æ–º, –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–µ—à—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å!")
    elif most_common_answer == options_order[1]:
        st.write("–¢—ã –∏—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π! –í—Å–µ–≥–¥–∞ –µ—Å—Ç—å –∑–∞–ø–∞—Å–Ω–æ–π –ø–ª–∞–Ω (–∏–ª–∏ —Ç—Ä–∏), –∏ —Ç—ã –Ω–µ —Å–¥–∞—ë—à—å—Å—è!")
    elif most_common_answer == options_order[2]:
        st.write("–¢—ã –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç! –¢–æ—á–µ–Ω –∏ –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω –∫ –¥–µ—Ç–∞–ª—è–º, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç –æ–∂–∏–¥–∞–Ω–∏—è!")
    elif most_common_answer == options_order[3]:
        st.write("–¢—ã —Ö—É–¥–æ–∂–Ω–∏–∫! –í —Ç–≤–æ–∏—Ö —Ä—É–∫–∞—Ö –ª—é–±–∞—è –∑–∞–¥–∞—á–∞ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞!")
    else:
        st.write("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.")

    if st.button("–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ"):
        st.session_state.current_question = 0
        st.session_state.answers = [None] * len(questions)
        st.rerun()

else:
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ current_question ‚Äì —á–∏—Å–ª–æ
    q_index = st.session_state.current_question
    question = questions[q_index]

    st.header(f"–í–æ–ø—Ä–æ—Å {q_index + 1}/{len(questions)}")
    if st.session_state.answers[q_index] is not None:
        try:
            default_index = question["options"].index(st.session_state.answers[q_index])
        except ValueError:
            default_index = 0
    else:
        default_index = 0

    with st.container(border=True):
        answer = st.radio(question["question"], question["options"], index=default_index)

    col1, col2 = st.columns(2)

    with col1:
        if st.session_state.current_question > 0:
            if st.button("‚¨Ö –ù–∞–∑–∞–¥"):
                st.session_state.current_question -= 1
                st.rerun()

    with col2:
        if st.button("‚û° –î–∞–ª–µ–µ"):
            st.session_state.answers[q_index] = answer
            if st.session_state.current_question < len(questions) - 1:
                st.session_state.current_question += 1
            else:
                st.session_state.current_question = "result"
            st.rerun()
